#!/usr/bin/php
<?php

use Strukt\Env;
use Strukt\Framework\App as FrameworkApp;
use Strukt\Framework\Configuration;
use Strukt\Framework\Injectable;

require "bootstrap.php";
$repo = require "cfg/repo.php";

$argv = $_SERVER["argv"];

array_shift($argv);
$method = array_shift($argv);
$uri = array_shift($argv);
$params = [];

array_map(function($param) use(&$params){

	list($key, $val) = explode("=", $param);

	$params[$key] = $val;

}, $argv);

$_SERVER["REQUEST_URI"] = $uri;
$_SERVER["REQUEST_METHOD"] = $method;
$_REQUEST = $_POST = $params;

Env::withFile();
Env::set("root_dir", getcwd());

FrameworkApp::create("App:Cli");
FrameworkApp::mayBeRepo($repo);

App\Middleware\XSession::create(array(

		"username"=>"admin"
	),
	array(

		"strukt:auth"
));

$config = new Configuration();
$middlewares = $config->get("middlewares");
$middlewares = array_merge([App\Middleware\XSession::class], $middlewares);
$config->set("middlewares", $middlewares);

$kernel = new App\Kernel($config, new Injectable());
$runner = $kernel->getApp()->run();
$runner = $runner->init();
$response = $kernel->getRouter()->run();
exit(sprintf("%s\n", $response->getContent()));